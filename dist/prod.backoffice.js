/*! Version: 5.1.910054 || Generated: Thu Jul 16 2020 14:18:05 GMT+0100 (Hora de ver√£o da Europa Ocidental) */
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/backoffice/scripts.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/backoffice/scripts.js":
/*!***********************************!*\
  !*** ./src/backoffice/scripts.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./styles.scss */ \"./src/backoffice/styles.scss\");\r\n\r\n\r\nSapphireWidgets = window.SapphireWidgets = window.SapphireWidgets || {};\r\n\r\n\r\n\r\n\r\n__webpack_require__(/*! ../components/05-components/v3-pat/datetime-range-picker/scripts */ \"./src/components/05-components/v3-pat/datetime-range-picker/scripts.js\");\r\n__webpack_require__(/*! ../components/05-components/v3-pat/panel/scripts */ \"./src/components/05-components/v3-pat/panel/scripts.js\");\r\n__webpack_require__(/*! ../components/05-components/v3-pat/select-system/scripts */ \"./src/components/05-components/v3-pat/select-system/scripts.js\");\n\n//# sourceURL=webpack:///./src/backoffice/scripts.js?");

/***/ }),

/***/ "./src/backoffice/styles.scss":
/*!************************************!*\
  !*** ./src/backoffice/styles.scss ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/backoffice/styles.scss?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/datetime-range-picker/scripts.js":
/*!******************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/datetime-range-picker/scripts.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* Component DateTimeRangePicker */\r\n(function($, window, document, SapphireWidgets) {\r\n\tvar allDateTimeRangePickers = [];\r\n\r\n\tvar create = function(config) {\r\n\t\tfor (var i = 0; i < allDateTimeRangePickers.length; i++) {\r\n\t\t\tif (allDateTimeRangePickers[i].config.widgetId === config.widgetId) {\r\n\t\t\t\tallDateTimeRangePickers.splice(i, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\twindow[config.widgetId] = new DateTimeRangePicker(config);\r\n\t\tallDateTimeRangePickers.push(window[config.widgetId]);\r\n\t};\r\n\r\n\tvar DateTimeRangePicker = function(config) {\r\n\t\tthis.config = config;\r\n\t\tthis.currentLocale = config.currentLocale;\r\n\r\n\t\tthis.$widget = $('#' + config.widgetId);\r\n\t\tthis.$widget.addClass('DateTimeRangePicker');\r\n\t\tthis.$clear = this.$widget.find('.DateTimeRangePicker-clear');\r\n\t\tthis.$label = this.$widget.find('.DateTimeRangePicker-label');\r\n\r\n\t\tthis.isEmptyHour = false;\r\n\r\n\t\tif (this.config.attachToInput) {\r\n\t\t\tthis.$widget.addClass('attachedInput');\r\n\t\t\tthis.$input = this.$widget.find('.DateTimeRangePicker-placeholder input[type=\"text\"]');\r\n\t\t\tthis.$displayed = this.$widget.find('.DateTimeRangePicker-displayed input[type=\"text\"]');\r\n\t\t\tif (!this.config.allowsTyping) {\r\n\t\t\t\tthis.$displayed.prop('readonly', true);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.$input = $('#' + config.inputId);\r\n\t\t\tif (!this.config.allowsTyping) {\r\n\t\t\t\tthis.$input.prop('readonly', true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.currentLocale === 'AR') {\r\n\t\t\tmoment.locale('ar-kw');\r\n\t\t}\r\n\r\n\t\tvar options = {};\r\n\t\toptions.startDate = config.startDate;\r\n\t\toptions.singleDatePicker = config.singleDatePicker;\r\n\t\toptions.autoApply = config.autoApply;\r\n\t\toptions.autoUpdateInput = config.autoUpdateInput;\r\n\t\toptions.timePicker = config.timePicker;\r\n\t\toptions.timePicker24Hour = config.timePicker24Hour;\r\n\t\toptions.timePickerIncrement = config.timePickerIncrement;\r\n\t\toptions.showDropdowns = config.hasDropdowns;\r\n\t\toptions.drops = config.drops;\r\n\t\toptions.opens = config.opens;\r\n\r\n\t\tvar stringConnection = '[, at]';\r\n\r\n\t\tif (config.timePicker) {\r\n\t\t\tif (this.config.attachToInput) {\r\n\t\t\t\tthis.$displayed.prop('placeholder', 'DD-MM-YYYY HH:MM');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$input.prop('placeholder', 'DD-MM-YYYY HH:MM');\r\n\t\t\t}\r\n\t\t\tif (options.timePicker24Hour) {\r\n\t\t\t\tthis.config.formatInput = 'DD-MM-YYYY HH:mm';\r\n\t\t\t\tthis.config.formatLabel = this.config.hasYearWhenText\r\n\t\t\t\t\t? 'D MMM YYYY' + stringConnection + ' HH:mm'\r\n\t\t\t\t\t: 'D MMM' + stringConnection + ' HH:mm';\r\n\t\t\t} else {\r\n\t\t\t\tthis.config.formatInput = 'DD-MM-YYYY hh:mm A';\r\n\t\t\t\tthis.config.formatLabel = this.config.hasYearWhenText\r\n\t\t\t\t\t? 'D MMM YYYY' + stringConnection + ' hh:mm A'\r\n\t\t\t\t\t: 'D MMM' + stringConnection + ' hh:mm A';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.$widget.addClass('onlyDate');\r\n\t\t\tif (this.config.attachToInput) {\r\n\t\t\t\tthis.$displayed.prop('placeholder', 'DD-MM-YYYY');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$input.prop('placeholder', 'DD-MM-YYYY');\r\n\t\t\t}\r\n\t\t\tthis.config.formatInput = 'DD-MM-YYYY';\r\n\t\t\tthis.config.formatLabel = this.config.hasYearWhenText ? 'D MMM YYYY' : 'D MMM';\r\n\t\t}\r\n\r\n\t\tthis.config.formatLabel = this.config.hasWeekDayNameWhenText\r\n\t\t\t? 'ddd[, ]' + this.config.formatLabel\r\n\t\t\t: this.config.formatLabel;\r\n\r\n\t\toptions.locale = {\r\n\t\t\tdirection: config.currentLocale === 'AR' ? 'rtl' : 'ltr',\r\n\t\t\tformat: this.config.formatInput,\r\n\t\t\tcancelLabel: 'Cancel',\r\n\t\t\tapplyLabel: 'Apply',\r\n\t\t};\r\n\r\n\t\tif (config.hasTextTrigger) {\r\n\t\t\tthis.$widget.addClass('textTrigger');\r\n\t\t}\r\n\r\n\t\tif (config.endDate && config.endDate !== '01-01-1900 00:00:00') {\r\n\t\t\toptions.endDate = config.endDate;\r\n\t\t}\r\n\t\tif (config.maxDate && config.maxDate !== '01-01-1900 00:00:00') {\r\n\t\t\toptions.maxDate = config.maxDate;\r\n\t\t}\r\n\t\tif (config.minDate && config.minDate !== '01-01-1900 00:00:00') {\r\n\t\t\toptions.minDate = config.minDate;\r\n\t\t}\r\n\r\n\t\tif (config.DisabledWeekDays) {\r\n\t\t\tvar disabledWeekDays = config.DisabledWeekDays.split(',');\r\n\t\t\toptions.isInvalidDate = function(date) {\r\n\t\t\t\treturn disabledWeekDays.includes(\r\n\t\t\t\t\tmoment(date)\r\n\t\t\t\t\t\t.day()\r\n\t\t\t\t\t\t.toString()\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.$input.daterangepicker(options, function(startDate, endDate, label) {\r\n\t\t\t// after a selection is made\r\n\t\t});\r\n\r\n\t\t// now we have a proper instance\r\n\t\tthis.picker = this.$input.data('daterangepicker');\r\n\r\n\t\tthis.$calendar = $(this.picker.container);\r\n\r\n\t\tif (!!this.config.cssClass) {\r\n\t\t\tthis.$calendar.addClass(this.config.cssClass);\r\n\t\t}\r\n\r\n\t\tthis.$timeHolder = this.$calendar.find('.calendar-time');\r\n\t\tthis.$buttonsHolder = this.$calendar.find('.drp-buttons');\r\n\r\n\t\tif (this.config.autoApply) {\r\n\t\t\tthis.$buttonsHolder.hide();\r\n\t\t}\r\n\r\n\t\tif (config.isEmptyStartDate) {\r\n\t\t\tthis.clear(false);\r\n\t\t} else if (config.isEmptyStartHour) {\r\n\t\t\tthis.isEmptyHour = true;\r\n\t\t\tthis.updateLabeling();\r\n\t\t} else {\r\n\t\t\tthis.updateLabeling();\r\n\t\t}\r\n\r\n\t\tif (config.enabled) {\r\n\t\t\tthis.nativeEvents();\r\n\t\t\tthis.customEvents();\r\n\t\t} else {\r\n\t\t\tthis.$clear.hide();\r\n\t\t\tthis.$input.off('click focus keydown keyup');\r\n\t\t}\r\n\r\n\t\tif (this.config.attachToInput) {\r\n\t\t\tthis.handleCustomValidation();\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.handleCustomValidation = function() {\r\n\t\tvar errorMessage = this.$input.next().text();\r\n\t\tif (!!errorMessage.length) {\r\n\t\t\tthis.$displayed.addClass('Not_Valid');\r\n\t\t\tthis.$displayed\r\n\t\t\t\t.next()\r\n\t\t\t\t.show()\r\n\t\t\t\t.text(errorMessage);\r\n\t\t} else {\r\n\t\t\tthis.$displayed.removeClass('Not_Valid');\r\n\t\t\tthis.$displayed.next().hide();\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.nativeEvents = function() {\r\n\t\tvar _this = this;\r\n\t\tthis.$input.on('showCalendar.daterangepicker', function(event, picker) {\r\n\t\t\tif (_this.config.hasGoToday) {\r\n\t\t\t\t_this.$calendar\r\n\t\t\t\t\t.find('.calendar-table thead tr')\r\n\t\t\t\t\t.eq(0)\r\n\t\t\t\t\t.after('<tr><td colspan=\"7\" class=\"DateTimeRangePicker-calendar-gotoday\">' + 'Today' + '</td></tr>');\r\n\t\t\t\tif (_this.config.drops === 'up') {\r\n\t\t\t\t\t_this.$calendar.css('top', _this.$calendar.offset().top - 24);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_this.handleViewportPosition();\r\n\t\t});\r\n\t\tthis.$input.on('show.daterangepicker', function(event, picker) {\r\n\t\t\tif (_this.config.timePicker && _this.config.hasClearHour) {\r\n\t\t\t\t_this.$calendar.find('.calendar-time').append('<span class=\"DateTimeRangePicker-calendar-clear\"></span>');\r\n\t\t\t\tif (_this.isEmptyHour) {\r\n\t\t\t\t\t_this.$timeHolder.css('opacity', 0.5);\r\n\t\t\t\t\t_this.$calendar.find('.DateTimeRangePicker-calendar-clear').addClass('disabled');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_this.$timeHolder.css('opacity', 1);\r\n\t\t\t\t\t_this.$calendar.find('.DateTimeRangePicker-calendar-clear').removeClass('disabled');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_this.handleViewportPosition();\r\n\t\t\tSapphireWidgets.DateTimeRangePicker.openedWidgetId = _this.config.widgetId;\r\n\t\t});\r\n\t\tthis.$input.on('hide.daterangepicker', function(event, picker) {\r\n\t\t\t_this.$calendar.find('.DateTimeRangePicker-calendar-clear').remove();\r\n\t\t\t_this.updateParentIframe();\r\n\t\t});\r\n\t\tthis.$input.on('cancel.daterangepicker', function(event, picker) {});\r\n\t\tthis.$input.on('outsideClick.daterangepicker', function(event, picker) {});\r\n\t\tthis.$input.on('timechanged.daterangepicker', function(event, picker) {\r\n\t\t\t_this.isEmptyHour = false;\r\n\t\t\t_this.$timeHolder.css('opacity', 1);\r\n\t\t\tif (_this.config.hasClearHour) {\r\n\t\t\t\t_this.$calendar.find('.calendar-time').append('<span class=\"DateTimeRangePicker-calendar-clear\"></span>');\r\n\t\t\t}\r\n\t\t\tif (_this.config.autoApply) {\r\n\t\t\t\t_this.$clear.removeClass('disabled');\r\n\t\t\t\t_this.updateLabeling();\r\n\t\t\t\t_this.sendNotification();\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.$input.on('clickDate.daterangepicker', function(event, picker) {\r\n\t\t\tif (_this.config.autoApply) {\r\n\t\t\t\t_this.$clear.removeClass('disabled');\r\n\t\t\t\t_this.updateLabeling();\r\n\t\t\t\t_this.sendNotification();\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.$input.on('apply.daterangepicker', function(event, picker) {\r\n\t\t\t_this.$clear.removeClass('disabled');\r\n\t\t\t_this.updateLabeling();\r\n\t\t\t_this.sendNotification();\r\n\t\t});\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.customEvents = function() {\r\n\t\tvar _this = this;\r\n\t\tthis.$label.off('click').on('click', function(event) {\r\n\t\t\t_this.picker.toggle();\r\n\t\t});\r\n\t\tthis.$clear.off('click').on('click', function(event) {\r\n\t\t\t_this.clear();\r\n\t\t\t_this.picker.hide();\r\n\t\t});\r\n\t\tthis.$calendar.on('click', '.DateTimeRangePicker-calendar-clear', function() {\r\n\t\t\tif (_this.config.timePicker24Hour) {\r\n\t\t\t\t_this.$calendar\r\n\t\t\t\t\t.find('.hourselect')\r\n\t\t\t\t\t.val('0')\r\n\t\t\t\t\t.trigger('change');\r\n\t\t\t} else {\r\n\t\t\t\t_this.$calendar\r\n\t\t\t\t\t.find('.hourselect')\r\n\t\t\t\t\t.val('12')\r\n\t\t\t\t\t.trigger('change');\r\n\t\t\t}\r\n\t\t\t_this.$calendar\r\n\t\t\t\t.find('.minuteselect')\r\n\t\t\t\t.val('0')\r\n\t\t\t\t.trigger('change');\r\n\t\t\t_this.$calendar\r\n\t\t\t\t.find('.ampmselect')\r\n\t\t\t\t.val('AM')\r\n\t\t\t\t.trigger('change');\r\n\t\t\t_this.isEmptyHour = true;\r\n\t\t\t_this.$timeHolder.css('opacity', 0.5);\r\n\t\t\t_this.$calendar.find('.DateTimeRangePicker-calendar-clear').addClass('disabled');\r\n\t\t});\r\n\t\tthis.$calendar.on('click', '.DateTimeRangePicker-calendar-gotoday', function() {\r\n\t\t\t_this.picker.setStartDate(moment());\r\n\t\t\t_this.picker.setEndDate(moment());\r\n\t\t\t_this.picker.hide();\r\n\t\t\tif (!_this.config.autoUpdateInput || _this.config.hasTextTrigger || _this.config.attachToInput) {\r\n\t\t\t\t_this.updateLabeling();\r\n\t\t\t}\r\n\t\t\t_this.sendNotification();\r\n\t\t});\r\n\t\tif (this.config.attachToInput) {\r\n\t\t\tthis.$displayed.on('click focus', function() {\r\n\t\t\t\t_this.$input.trigger('click');\r\n\t\t\t});\r\n\t\t\tthis.$displayed.on('keyup', function(evt) {\r\n\t\t\t\t_this.$input.val(_this.$displayed.val()).trigger('keyup');\r\n\t\t\t});\r\n\r\n\t\t\tthis.$displayed.on('keydown', function(evt) {\r\n\t\t\t\t_this.$input.val(_this.$displayed.val()).trigger('keydown');\r\n\t\t\t});\r\n\r\n\t\t\tif (this.config.attachToInput && this.config.allowsTyping) {\r\n\t\t\t\tthis.$input.on('keyup', function(evt) {\r\n\t\t\t\t\t_this.$displayed.val(_this.$input.val());\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.$input.on('click', function() {\r\n\t\t\t\twindow.setTimeout(function() {\r\n\t\t\t\t\t_this.updateParentIframe();\r\n\t\t\t\t}, 50);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.updateLabeling = function() {\r\n\t\tvar labelMask = this.config.formatLabel;\r\n\t\tvar inputMask = this.config.formatInput;\r\n\t\tif (moment(this.picker.startDate).isSame(moment(), 'day')) {\r\n\t\t\tif (labelMask.includes('D MMM YYYY')) {\r\n\t\t\t\tlabelMask = labelMask.replace('D MMM YYYY', '[Today]');\r\n\t\t\t} else if (labelMask.includes('D MMM')) {\r\n\t\t\t\tlabelMask = labelMask.replace('D MMM', '[Today]');\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Something wrong with the labelMask', labelMask);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.isEmptyHour) {\r\n\t\t\tlabelMask = labelMask.replace('hh:mm A', '[--:--]').replace('HH:mm', '[--:--]');\r\n\t\t\tinputMask = inputMask.replace('hh:mm A', '[--:--]').replace('HH:mm', '[--:--]');\r\n\t\t\tif (this.config.hasTextTrigger) {\r\n\t\t\t\tthis.$label.html(this.picker.startDate.format(labelMask));\r\n\t\t\t\tif (this.config.timePicker) {\r\n\t\t\t\t\tthis.$input.val(this.picker.startDate.format('DD-MM-YYYY [00:00:00]'));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$input.val(this.picker.startDate.format('DD-MM-YYYY'));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.$input.val(this.picker.startDate.format('DD-MM-YYYY [00:00:00]'));\r\n\t\t\t\tif (this.config.attachToInput) {\r\n\t\t\t\t\tthis.$displayed.val(this.picker.startDate.format(inputMask));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.config.hasTextTrigger) {\r\n\t\t\t\tthis.$label.html(this.picker.startDate.format(labelMask));\r\n\t\t\t\tif (this.config.timePicker) {\r\n\t\t\t\t\tthis.$input.val(this.picker.startDate.format('DD-MM-YYYY HH:mm:ss'));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$input.val(this.picker.startDate.format('DD-MM-YYYY'));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (this.config.attachToInput) {\r\n\t\t\t\t\tthis.$displayed.val(this.picker.startDate.format(this.config.formatInput));\r\n\t\t\t\t\tif (this.config.timePicker) {\r\n\t\t\t\t\t\tthis.$input.val(this.picker.startDate.format('DD-MM-YYYY HH:mm:ss'));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$input.val(this.picker.startDate.format('DD-MM-YYYY'));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$input.val(this.picker.startDate.format(this.config.formatInput));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.handleViewportPosition = function() {\r\n\t\tif (\r\n\t\t\twindow.frameElement &&\r\n\t\t\t($(window.frameElement.parentElement).hasClass('tooltipster-content') ||\r\n\t\t\t\t$(window.frameElement.parentElement).hasClass('os-internal-ui-dialog-content'))\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!this.isInViewport()) {\r\n\t\t\tvar coords = this.$calendar[0].getBoundingClientRect();\r\n\t\t\tif (this.$calendar.hasClass('drop-up') && this.$calendar[0].getBoundingClientRect().top < 0) {\r\n\t\t\t\tvar point = window.scrollY + coords.bottom + this.$input.height() + 7;\r\n\t\t\t\tthis.$calendar\r\n\t\t\t\t\t.removeClass('drop-up')\r\n\t\t\t\t\t.addClass('drop-down')\r\n\t\t\t\t\t.css('top', point);\r\n\t\t\t} else if (\r\n\t\t\t\t!this.$calendar.hasClass('drop-up') &&\r\n\t\t\t\tthis.$calendar[0].getBoundingClientRect().bottom > (window.innerHeight || document.documentElement.clientHeight)\r\n\t\t\t) {\r\n\t\t\t\tvar point = window.scrollY + coords.top - coords.height - this.$input.height() - 7;\r\n\t\t\t\tthis.$calendar.addClass('drop-up').css('top', point);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.isInViewport = function() {\r\n\t\tvar bounding = this.$calendar[0].getBoundingClientRect();\r\n\t\treturn (\r\n\t\t\tbounding.top >= 0 && bounding.bottom <= (window.innerHeight + 5 || document.documentElement.clientHeight + 5)\r\n\t\t);\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.clear = function(sendNotification) {\r\n\t\tthis.picker.setStartDate(moment());\r\n\t\tthis.picker.setEndDate(moment());\r\n\t\tthis.isEmptyHour = false;\r\n\t\tthis.$clear.addClass('disabled');\r\n\t\tif (this.config.hasTextTrigger) {\r\n\t\t\tthis.$label.html('-- -- --');\r\n\t\t} else {\r\n\t\t\tthis.$input.val('');\r\n\t\t\tif (this.config.attachToInput) {\r\n\t\t\t\tthis.$displayed.val('');\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (sendNotification || sendNotification == undefined) {\r\n\t\t\tthis.sendNotification(false);\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.show = function() {\r\n\t\tthis.picker.show();\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.hide = function() {\r\n\t\tthis.picker.hide();\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.cancel = function() {\r\n\t\tthis.picker.clickCancel();\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.sendNotification = function(sendDate) {\r\n\t\tif (this.$widget.hasClass('attachedInput')) {\r\n\t\t\tthis.$input.trigger('change');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (sendDate || sendDate == undefined) {\r\n\t\t\tif (this.isEmptyHour) {\r\n\t\t\t\tOsNotifyWidget(\r\n\t\t\t\t\tthis.config.dateTimeRangePickerFakeNotifyId,\r\n\t\t\t\t\tthis.picker.startDate.format('DD-MM-YYYY [00:00:00]') + '|' + this.isEmptyHour\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tif (this.config.timePicker) {\r\n\t\t\t\t\tOsNotifyWidget(\r\n\t\t\t\t\t\tthis.config.dateTimeRangePickerFakeNotifyId,\r\n\t\t\t\t\t\tthis.picker.startDate.format('DD-MM-YYYY HH:mm:ss') + '|' + this.isEmptyHour\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tOsNotifyWidget(\r\n\t\t\t\t\t\tthis.config.dateTimeRangePickerFakeNotifyId,\r\n\t\t\t\t\t\tthis.picker.startDate.format('DD-MM-YYYY') + '|' + this.isEmptyHour\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tOsNotifyWidget(this.config.dateTimeRangePickerFakeNotifyId, 'null|true');\r\n\t\t}\r\n\t};\r\n\r\n\tDateTimeRangePicker.prototype.updateParentIframe = function() {\r\n\t\tif (typeof SapphireWidgets.ResizeParentIframe === 'object') {\r\n\t\t\tSapphireWidgets.ResizeParentIframe.resize();\r\n\t\t}\r\n\t\tif ($('.Page.LayoutPopup').length === 1) {\r\n\t\t\tSapphireWidgets.LayoutPopup.redrawDialogWindow();\r\n\t\t}\r\n\t};\r\n\r\n\tSapphireWidgets.DateTimeRangePicker = {\r\n\t\tcreate: create,\r\n\t\tall: function() {\r\n\t\t\treturn allDateTimeRangePickers;\r\n\t\t},\r\n\t};\r\n})(jQuery, window, document, SapphireWidgets);\r\n\n\n//# sourceURL=webpack:///./src/components/05-components/v3-pat/datetime-range-picker/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/panel/confirmation-panel.js":
/*!*************************************************************************!*\
  !*** ./src/components/05-components/v3-pat/panel/confirmation-panel.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* Component ConfirmationPanel3Options ConfirmationPanel same javascript code*/\r\n\r\nSapphireWidgets.ConfirmationPanel = {\r\n\tisAnyPanelOpened: function() {\r\n\t\treturn $('body').hasClass('PanelOpened') && $('.PanelContainer:visible').length;\r\n\t},\r\n\r\n\ttogglePanel: function(PanelId) {\r\n\t\tif (!OsValidatorOnSubmit()) return;\r\n\r\n\t\tif (!SapphireWidgets.ConfirmationPanel.isAnyPanelOpened()) {\r\n\t\t\t$('body').addClass('PanelOpened');\r\n\t\t\t$('#' + PanelId).fadeIn(140);\r\n\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\t$('#' + PanelId)\r\n\t\t\t\t\t.find('.PanelContainer')\r\n\t\t\t\t\t.slideToggle(150);\r\n\t\t\t}, 100);\r\n\t\t}\r\n\t},\r\n\r\n\tclosePanel: function(PanelId) {\r\n\t\t$('body').removeClass('PanelOpened');\r\n\t\t$('#' + PanelId).fadeOut(140);\r\n\r\n\t\tsetTimeout(function() {\r\n\t\t\t$('#' + PanelId)\r\n\t\t\t\t.find('.PanelContainer')\r\n\t\t\t\t.slideUp(150);\r\n\t\t}, 100);\r\n\t},\r\n\r\n\tsetPanelBehavior: function() {\r\n\t\t$('.Panel[panel-trigger-elementid]').each(function() {\r\n\t\t\tvar this_panel = $(this);\r\n\t\t\t$('#' + this_panel.attr('panel-trigger-elementid') + '')\r\n\t\t\t\t.off('click')\r\n\t\t\t\t.on('click', function() {\r\n\t\t\t\t\tSapphireWidgets.ConfirmationPanel.togglePanel(this_panel.attr('id'));\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t});\r\n\t\t});\r\n\t},\r\n};\r\n\r\n$(document).ready(function() {\r\n\tSapphireWidgets.ConfirmationPanel.setPanelBehavior();\r\n\tif (osAjaxBackend.EventHandlers.AfterAjaxRequest.toString().indexOf('setPanelBehavior') == -1) {\r\n\t\tosAjaxBackend.BindAfterAjaxRequest(SapphireWidgets.ConfirmationPanel.setPanelBehavior);\r\n\t}\r\n});\r\n\n\n//# sourceURL=webpack:///./src/components/05-components/v3-pat/panel/confirmation-panel.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/panel/panel-by-id.js":
/*!******************************************************************!*\
  !*** ./src/components/05-components/v3-pat/panel/panel-by-id.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* Component PanelByID */\r\nSapphireWidgets.PanelById = {\r\n\tisAnyPanelOpenedDeprecated: function() {\r\n\t\treturn $('body').hasClass('PanelOpened');\r\n\t},\r\n\r\n\ttoggleButton: function(id) {\r\n\t\tconst $toggleButton = $(`#${id}`).parents('.ToggleButton').length\r\n\t\t\t? $(`#${id}`).parents('.ToggleButton')\r\n\t\t\t: $(`#${id}`);\r\n\r\n\t\t$toggleButton.click();\r\n\t},\r\n\r\n\ttogglePanelById: function(Id) {\r\n\t\tif (!this.isAnyPanelOpenedDeprecated()) {\r\n\t\t\t$('body').addClass('PanelOpened');\r\n\t\t\t$('body').css('overflow-y', 'hidden');\r\n\r\n\t\t\t$('#' + Id)\r\n\t\t\t\t.parents('.ToggleButton')\r\n\t\t\t\t.parent()\r\n\t\t\t\t.children('.Panel')\r\n\t\t\t\t.fadeIn(140);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (typeof justDragged !== 'undefined') {\r\n\t\t\t\t\tif (justDragged == false) {\r\n\t\t\t\t\t\t$('.PanelByIdNew_PanelContainer')\r\n\t\t\t\t\t\t\t.css('margin-left', panelMarginLeft)\r\n\t\t\t\t\t\t\t.css('left', panelLeft)\r\n\t\t\t\t\t\t\t.addClass(panelArrowClass);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\t$('#' + Id)\r\n\t\t\t\t\t.parents('.ToggleButton')\r\n\t\t\t\t\t.parent()\r\n\t\t\t\t\t.children('.Panel')\r\n\t\t\t\t\t.children('.PanelContainer')\r\n\t\t\t\t\t.slideDown(150);\r\n\r\n\t\t\t\t$(`#${Id}`)\r\n\t\t\t\t\t.parents('.ToggleButton')\r\n\t\t\t\t\t.click();\r\n\t\t\t}, 100);\r\n\t\t} else {\r\n\t\t\t$('body').removeClass('PanelOpened');\r\n\t\t\t$('body').css('overflow-y', 'scroll');\r\n\r\n\t\t\t$('#' + Id)\r\n\t\t\t\t.parents('.ToggleButton')\r\n\t\t\t\t.parent()\r\n\t\t\t\t.children('.Panel')\r\n\t\t\t\t.fadeOut(140);\r\n\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\t$('#' + Id)\r\n\t\t\t\t\t.parents('.ToggleButton')\r\n\t\t\t\t\t.parent()\r\n\t\t\t\t\t.children('.Panel')\r\n\t\t\t\t\t.children('.PanelContainer')\r\n\t\t\t\t\t.slideUp(150);\r\n\r\n\t\t\t\t$(`#${Id}`)\r\n\t\t\t\t\t.parents('.ToggleButton')\r\n\t\t\t\t\t.click();\r\n\t\t\t}, 100);\r\n\t\t}\r\n\t},\r\n};\r\n\n\n//# sourceURL=webpack:///./src/components/05-components/v3-pat/panel/panel-by-id.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/panel/popup-menu.js":
/*!*****************************************************************!*\
  !*** ./src/components/05-components/v3-pat/panel/popup-menu.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* Component PopUpMenu */\r\nSapphireWidgets.PopUpMenu = {\r\n\tmenuPosition: function(id, Context, Locale) {\r\n\t\t/* Hide any other menus on page and set button as collapsed. */\r\n\t\t$('.popup-menu:visible').hide();\r\n\r\n\t\t//var _this = $(this);\r\n\t\tvar _this = $('#' + id);\r\n\t\tvar Xx = 0;\r\n\t\tvar Yy = 0;\r\n\t\tvar Ww = 0;\r\n\t\tvar Hh = 0;\r\n\r\n\t\t_this.children('.button-expand:visible').hide();\r\n\r\n\t\t/* Get the menu element. */\r\n\t\tvar _el = _this.next('.popup-menu');\r\n\r\n\t\t/* Display the menu. */\r\n\t\t_el.show();\r\n\r\n\t\t/* Set button collapse. */\r\n\t\t_this.children('.button-collapse').show();\r\n\r\n\t\t/* Get the dimensions of the button. */\r\n\t\tbuttonHh = _this.outerHeight();\r\n\t\tbuttonWw = _this.outerWidth();\r\n\r\n\t\tvar buttonY = _this.position().top + buttonHh;\r\n\t\tvar buttonX = _this.offset().left;\r\n\t\t//var buttonX = _this.position().left;\r\n\r\n\t\t/* Get the distance of menu button and the parent element */\r\n\t\tvar popupParentXx = _this.offset().left - _this.position().left;\r\n\r\n\t\tvar popupXx = _el.offset().left;\r\n\t\tvar popupWw = _el.outerWidth();\r\n\r\n\t\tXx = Math.abs(buttonX - $('body').scrollLeft() - popupParentXx);\r\n\t\tYy = Math.abs(buttonHh - buttonY - $('body').scrollTop());\r\n\r\n\t\tif (Locale != 'AR') {\r\n\t\t\t/* Check if clicked position plus the popup width exceed the window width. */\r\n\t\t\tif (buttonX + popupWw - $('body').scrollLeft() > $(Context).width()) {\r\n\t\t\t\tXx = buttonX - popupWw - $('body').scrollLeft() - popupParentXx + buttonWw;\r\n\t\t\t\t//Xx = ($(window).width() - popupWw) - $('body').scrollLeft();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Set menu position. */\r\n\t\t_el.css({\r\n\t\t\tleft: Xx + 'px',\r\n\t\t\ttop: buttonY + 'px',\r\n\t\t});\r\n\r\n\t\t/* Refresh value */\r\n\t\tpopupXx = _el.offset().left;\r\n\r\n\t\tvar _balloonEl = _el.children('.popup-menu-balloon');\r\n\r\n\t\tvar _balloonXx = _balloonEl.offset().left;\r\n\t\tvar _balloonWw = _balloonEl.outerWidth();\r\n\t\tvar _balloonPosXx = Math.abs(buttonX - Xx - popupParentXx);\r\n\r\n\t\t/* Is the balloon icon positioned out of the popup menu? */\r\n\t\tif (_balloonPosXx + Xx + _balloonWw > Xx + popupWw) {\r\n\t\t\t_balloonPosXx = _balloonPosXx - _balloonWw;\r\n\t\t}\r\n\r\n\t\t/* Set position of the balloon effect. */\r\n\t\t_balloonEl.css('left', _balloonPosXx + 'px');\r\n\t},\r\n\tmenuEvents: function(Context, Locale) {\r\n\t\t$('.popup-button')\r\n\t\t\t.off('click')\r\n\t\t\t.on('click', function(e) {\r\n\t\t\t\tvar id = $(this).attr('id');\r\n\t\t\t\tSapphireWidgets.PopUpMenu.menuPosition(id, Context, Locale);\r\n\r\n\t\t\t\t/*e.stopPropagation();*/\r\n\r\n\t\t\t\t/* Prevent link submission */\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\r\n\t\t/* v *** Hide popup when click outside *** v */\r\n\t\tfunction PMClickOutside(event) {\r\n\t\t\tif (event.hasOwnProperty('target')) {\r\n\t\t\t\tvar target = $(event.target);\r\n\t\t\t\t/*if ((target.parents().index($('a[sapphirehospital], .HospitalPopUp')) == -1)) {}*/\r\n\t\t\t\tif (\r\n\t\t\t\t\t!$(event.target).closest(\r\n\t\t\t\t\t\t'.popup-button, .popup-menu, .os-internal-ui-autocomplete, .os-internal-ui-menu-item, .os-internal-ui-corner-all, ui-autocomplete-item'\r\n\t\t\t\t\t).length\r\n\t\t\t\t) {\r\n\t\t\t\t\t$('.popup-menu:visible').hide();\r\n\t\t\t\t\t$('.button-collapse:visible').hide();\r\n\t\t\t\t\t$('.button-expand').show();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _PMIsDrag = false;\r\n\t\tvar _PMIsClick = false;\r\n\t\t$(document).on('touchstart', function(event) {\r\n\t\t\t_PMIsDrag = false;\r\n\t\t\t_PMIsClick = true;\r\n\t\t});\r\n\t\t$(document).on('touchmove', function(event) {\r\n\t\t\t_PMIsDrag = true;\r\n\t\t});\r\n\t\t$(document).on('click', function(event) {\r\n\t\t\tPMClickOutside(event);\r\n\t\t\t_PMIsDrag = false;\r\n\t\t\t_PMIsClick = false;\r\n\t\t});\r\n\t\t$(document).on('touchend', function(event) {\r\n\t\t\tif (!_PMIsDrag && _PMIsClick) {\r\n\t\t\t\tPMClickOutside(event);\r\n\t\t\t}\r\n\t\t\t_PMIsDrag = false;\r\n\t\t\t_PMIsClick = false;\r\n\t\t});\r\n\r\n\t\t$('.button-collapse').on('click', function(event) {\r\n\t\t\t$('body').trigger('click');\r\n\t\t\treturn false;\r\n\t\t});\r\n\t\t/* ^ *** Hide popup when click outside *** ^ */\r\n\t},\r\n};\r\n\n\n//# sourceURL=webpack:///./src/components/05-components/v3-pat/panel/popup-menu.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/panel/sapphire-panel.js":
/*!*********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/panel/sapphire-panel.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* Component SapphirePanel */\r\nSapphireWidgets.SapphirePanel = {\r\n\tcheckOpenPanel: function() {\r\n\t\treturn $('body').hasClass('SapphirePanelOpen') && $('.SapphirePanel_Container:visible').length;\r\n\t},\r\n\r\n\ttoggleSapphirePanel: function(PanelId) {\r\n\t\tif (!OsValidatorOnSubmit()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!SapphireWidgets.SapphirePanel.checkOpenPanel()) {\r\n\t\t\t$('body').addClass('SapphirePanelOpen');\r\n\t\t\t$('#' + PanelId).fadeIn(140);\r\n\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\t$('#' + PanelId)\r\n\t\t\t\t\t.find('.SapphirePanel_Container')\r\n\t\t\t\t\t.slideToggle(150);\r\n\t\t\t}, 100);\r\n\t\t}\r\n\t},\r\n\r\n\tcloseSapphirePanel: function(PanelId) {\r\n\t\t$('body').removeClass('SapphirePanelOpen');\r\n\t\t$('#' + PanelId).fadeOut(140);\r\n\r\n\t\tsetTimeout(function() {\r\n\t\t\t$('#' + PanelId)\r\n\t\t\t\t.find('.SapphirePanel_Container')\r\n\t\t\t\t.slideUp(150);\r\n\t\t}, 100);\r\n\t},\r\n\r\n\tsetPanelBehavior: function() {\r\n\t\t$('.Panel[panel-trigger-elementid]').each(function() {\r\n\t\t\tvar this_panel = $(this);\r\n\t\t\t$('#' + this_panel.attr('panel-trigger-elementid') + '')\r\n\t\t\t\t.off('click')\r\n\t\t\t\t.on('click', function() {\r\n\t\t\t\t\tSapphireWidgets.SapphirePanel.toggleSapphirePanel(this_panel.attr('id'));\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t});\r\n\t\t});\r\n\t},\r\n};\r\n\r\n$(document).ready(function() {\r\n\tSapphireWidgets.SapphirePanel.setPanelBehavior();\r\n\r\n\tif (osAjaxBackend.EventHandlers.AfterAjaxRequest.toString().indexOf('setPanelBehavior') == -1) {\r\n\t\tosAjaxBackend.BindAfterAjaxRequest(SapphireWidgets.SapphirePanel.setPanelBehavior);\r\n\t}\r\n});\r\n\n\n//# sourceURL=webpack:///./src/components/05-components/v3-pat/panel/sapphire-panel.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/panel/scripts.js":
/*!**************************************************************!*\
  !*** ./src/components/05-components/v3-pat/panel/scripts.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./confirmation-panel */ \"./src/components/05-components/v3-pat/panel/confirmation-panel.js\");\r\n__webpack_require__(/*! ./panel-by-id */ \"./src/components/05-components/v3-pat/panel/panel-by-id.js\");\r\n//require('./panel-by-id-notify');\r\n__webpack_require__(/*! ./popup-menu */ \"./src/components/05-components/v3-pat/panel/popup-menu.js\");\r\n__webpack_require__(/*! ./sapphire-panel */ \"./src/components/05-components/v3-pat/panel/sapphire-panel.js\");\r\n\r\n\n\n//# sourceURL=webpack:///./src/components/05-components/v3-pat/panel/scripts.js?");

/***/ }),

/***/ "./src/components/05-components/v3-pat/select-system/scripts.js":
/*!**********************************************************************!*\
  !*** ./src/components/05-components/v3-pat/select-system/scripts.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* Component SelectSystem */\r\nSapphireWidgets.SelectSystem = config => {\r\n\t$(function() {\r\n\t\tvar WidgetId = config.WidgetId; //Combo Box Id to be used.\r\n\t\tvar Class = config.Class; //All Combo boxes with this class will be be transformed.\r\n\t\tvar NoResultsText = config.NoResultsText; //Text to display when there are no results.\r\n\t\tvar inputType = config.InpuType; //Options: FIlters, Dropdown, Select2\r\n\t\tvar Prompt = config.Prompt; //Prompt in search\r\n\t\tvar Select2Type = config.SelectType; // Type of select2 configuration\r\n\t\tvar HasSearch = config.HasSearch; // has search\r\n\t\tvar OnSelectingJS = config.OnSelectingJS;\r\n\t\tvar OnUnSelectingJS = config.OnUnSelectingJS;\r\n\t\tvar MaximumLength = config.MaximumLength;\r\n\t\tvar SelectedValue = config.SelectedValue;\r\n\t\tvar allowClear = config.allowClear;\r\n\t\t//  Select2 Ajax Configuration\r\n\t\tvar AjaxURL = config.AjaxURL;\r\n\t\tvar AjaxDelay = config.AjaxDelay;\r\n\t\tvar PaginationSize = config.PaginationSize;\r\n\t\tvar MinimumInputLenght = config.MinimumInputLenght;\r\n\t\tvar SearchTerm = config.SearchTerm;\r\n\t\tvar SearchExtraParam1 = config.SearchExtraParam1;\r\n\t\tvar PageTerm = config.PageTerm;\r\n\t\tvar AmountPage = config.PageAmount;\r\n\t\tvar isMultiple = config.isMultiple;\r\n\t\tvar Select2Options = {};\r\n\t\tvar $WidgetIdentifier;\r\n\r\n\t\tif (config.locale === 'AR' || config.locale === 'FA') {\r\n\t\t\tSelect2Options.dir = 'rtl';\r\n\t\t}\r\n\r\n\t\t/*  \r\n          Change select2 search display \r\n              -Multiple Select2 search UI like Single Select2\r\n      */\r\n\t\t$.fn.select2.amd.define(\r\n\t\t\t'SearchLikeSingle',\r\n\t\t\t[\r\n\t\t\t\t'select2/utils',\r\n\t\t\t\t'select2/dropdown',\r\n\t\t\t\t'select2/dropdown/attachBody',\r\n\t\t\t\t'select2/dropdown/attachContainer',\r\n\t\t\t\t'select2/dropdown/search',\r\n\t\t\t\t'select2/dropdown/minimumResultsForSearch',\r\n\t\t\t],\r\n\t\t\tfunction(Utils, Dropdown, AttachBody, AttachContainer, Search, minimumResultsForSearch) {\r\n\t\t\t\tlet dropdownSearch = Utils.Decorate(Dropdown, Search);\r\n\t\t\t\tdropdownSearch.prototype.render = function() {\r\n\t\t\t\t\tvar $rendered = Dropdown.prototype.render.call(this);\r\n\t\t\t\t\t// Add ability for a placeholder in the search box\r\n\t\t\t\t\tlet placeholder = this.options.get('placeholderForSearch') || '';\r\n\t\t\t\t\tvar $search = $(\r\n\t\t\t\t\t\t'<span class=\"select2-search select2-search--dropdown\">' +\r\n\t\t\t\t\t\t\t'<input class=\"select2-search__field\" placeholder=\"' +\r\n\t\t\t\t\t\t\tplaceholder +\r\n\t\t\t\t\t\t\t'\" type=\"search\"' +\r\n\t\t\t\t\t\t\t' tabindex=\"-1\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\"' +\r\n\t\t\t\t\t\t\t' spellcheck=\"false\" role=\"textbox\" />' +\r\n\t\t\t\t\t\t\t'</span>'\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tthis.$searchContainer = $search;\r\n\t\t\t\t\tthis.$search = $search.find('input');\r\n\t\t\t\t\t$search.addClass('MultipleSelect');\r\n\r\n\t\t\t\t\t$rendered.prepend($search);\r\n\t\t\t\t\t$search.parent().addClass('MultipleSelect');\r\n\t\t\t\t\treturn $rendered;\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Decorate the dropdown+search with the containers\r\n\t\t\t\tlet adapter = Utils.Decorate(dropdownSearch, AttachContainer);\r\n\t\t\t\tadapter = Utils.Decorate(adapter, AttachBody);\r\n\r\n\t\t\t\treturn adapter;\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t/**\r\n\t\t * Default Configuration needed to associate the widget to the select2 plugin\r\n\t\t */\r\n\t\tif (WidgetId === '' && Class != '') {\r\n\t\t\t$WidgetIdentifier = $('.' + Class);\r\n\t\t} else {\r\n\t\t\t$WidgetIdentifier = $('#' + WidgetId);\r\n\t\t}\r\n\t\tSelect2Options.containerCssClass = 'select-hide ' + inputType;\r\n\r\n\t\t//  Select2Options.dropdownParent= $('#'+ParentDiv);\r\n\r\n\t\tvar formatResult = function(result) {\r\n\t\t\tvar $selectedOptionsValue = $WidgetIdentifier.find(':selected');\r\n\t\t\tvar selectedOptions = $selectedOptionsValue.length;\r\n\t\t\tvar totalOptions = $WidgetIdentifier.find('option').length;\r\n\t\t\tvar selectAllOpt = $WidgetIdentifier.find('option:first-child:selected').length;\r\n\t\t\tvar activeValues = '';\r\n\t\t\tvar allOptExceptAll = $WidgetIdentifier.find(':selected:not(\".SelectedAll\")').length;\r\n\t\t\tvar $allOptExceptAllObj = $WidgetIdentifier.find(':selected:not(\".SelectedAll\")');\r\n\r\n\t\t\tif (selectedOptions === totalOptions) {\r\n\t\t\t\tif (totalOptions - 1 > 3) {\r\n\t\t\t\t\treturn 'All Selected';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$allOptExceptAllObj.each(function() {\r\n\t\t\t\t\t\tactiveValues = activeValues + ' ' + $(this)[0].innerText;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tactiveValues = activeValues.replace(/,\\s*$/, '');\r\n\t\t\t\t\treturn activeValues;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar totalopt = totalOptions - 1;\r\n\t\t\t\tif (selectedOptions > 3) {\r\n\t\t\t\t\treturn selectedOptions + ' of ' + totalopt + ' selected';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (selectedOptions > 0) {\r\n\t\t\t\t\t\t$selectedOptionsValue.each(function() {\r\n\t\t\t\t\t\t\tactiveValues = activeValues + ' ' + $(this)[0].innerText + ', ';\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tactiveValues = activeValues.replace(/,\\s*$/, '');\r\n\t\t\t\t\t\treturn activeValues;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn 'Select an option';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (NoResultsText != '') {\r\n\t\t\tSelect2Options.formatNoMatches = function() {\r\n\t\t\t\treturn NoResultsText;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (inputType != '') {\r\n\t\t\tSelect2Options.dropdownCssClass = inputType;\r\n\t\t}\r\n\r\n\t\tif (allowClear === 'True') {\r\n\t\t\tSelect2Options.allowClear = true;\r\n\t\t}\r\n\r\n\t\tif (MaximumLength != '') {\r\n\t\t\tSelect2Options.maximumInputLength = MaximumLength;\r\n\t\t}\r\n\r\n\t\tif (Prompt != '') {\r\n\t\t\tSelect2Options.placeholder = Prompt;\r\n\t\t} else {\r\n\t\t\tSelect2Options.placeholder = {\r\n\t\t\t\tid: '-1', // the value of the option\r\n\t\t\t\ttext: 'Select an option',\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (Select2Type === '3') {\r\n\t\t\t// Select2 Ajax\r\n\t\t\tSelect2Options = {};\r\n\r\n\t\t\tif (config.locale === 'AR' || config.locale === 'FA') {\r\n\t\t\t\tSelect2Options.dir = 'rtl';\r\n\t\t\t}\r\n\r\n\t\t\tSelect2Options.allowClear = false;\r\n\r\n\t\t\tSelect2Options.templateSelection = function(repo) {\r\n\t\t\t\tif (!repo.element) {\r\n\t\t\t\t\treturn Prompt;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn repo.full_name || repo.text;\r\n\t\t\t};\r\n\r\n\t\t\tSelect2Options.templateResult = function(repo) {\r\n\t\t\t\tif (repo.loading) {\r\n\t\t\t\t\treturn repo.text;\r\n\t\t\t\t}\r\n\t\t\t\tvar markup = '<div class=\"\"Clearfix\"\">' + '<div class=\"\"ThemeGrid_Width12\"\">' + repo.text + '</div>';\r\n\t\t\t\tif (repo.description) {\r\n\t\t\t\t\tmarkup += '<div class=\"\"OSAutoMarginTop\"\">' + repo.description + '</div>';\r\n\t\t\t\t}\r\n\t\t\t\tmarkup += '</div>';\r\n\t\t\t\treturn markup;\r\n\t\t\t};\r\n\r\n\t\t\t(Select2Options.ajax = {\r\n\t\t\t\turl: AjaxURL,\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\tdelay: AjaxDelay,\r\n\t\t\t\tdata: function(params) {\r\n\t\t\t\t\tvar Select2AjaxOpt = {};\r\n\t\t\t\t\tvar SplitParameter = SearchExtraParam1.split(',');\r\n\t\t\t\t\tSelect2AjaxOpt.SearchParameter = params.term;\r\n\t\t\t\t\tSelect2AjaxOpt.Page = params.page || 1;\r\n\t\t\t\t\tSelect2AjaxOpt.PageAmount = AmountPage;\r\n\r\n\t\t\t\t\tSplitParameter.forEach(function(el) {\r\n\t\t\t\t\t\tvar splitText = el.split(':');\r\n\t\t\t\t\t\tSelect2AjaxOpt[splitText[0]] = splitText[1];\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\treturn Select2AjaxOpt;\r\n\t\t\t\t},\r\n\t\t\t\tprocessResults: function(data, params) {\r\n\t\t\t\t\tparams.page = params.page || 1;\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tresults: data.items,\r\n\t\t\t\t\t\tpagination: {\r\n\t\t\t\t\t\t\tmore: params.page * PaginationSize < data.total_count,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\tcache: true,\r\n\t\t\t}),\r\n\t\t\t\t(Select2Options.minimumInputLength = MinimumInputLenght);\r\n\r\n\t\t\tSelect2Options.escapeMarkup = function(markup) {\r\n\t\t\t\treturn markup;\r\n\t\t\t};\r\n\r\n\t\t\tif (config.isMultiple) {\r\n\t\t\t\tSelect2Options.multiple = true;\r\n\t\t\t\tSelect2Options.containerCssClass = 'Select2Ajax Multiple';\r\n\t\t\t\tSelect2Options.dropdownCssClass = 'Select2Ajax Multiple';\r\n\t\t\t} else {\r\n\t\t\t\tSelect2Options.multiple = false;\r\n\t\t\t\tSelect2Options.containerCssClass = 'Select2Ajax';\r\n\t\t\t\tSelect2Options.dropdownCssClass = 'Select2Ajax';\r\n\t\t\t}\r\n\r\n\t\t\tif (SelectedValue !== '') {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst data = JSON.parse(SelectedValue);\r\n\t\t\t\t\tconst option = new Option(data.Value, data.Id, true, true);\r\n\r\n\t\t\t\t\t$WidgetIdentifier.append(option).trigger('change');\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error(`Component SelectSystem (${WidgetId}): SelectedValue must be a valid JSON!`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tSelect2Options.minimumResultsForSearch = 0;\r\n\t\t\tSelect2Options.tags = config.HasTags;\r\n\t\t\tSelect2Options.closeOnselect = true;\r\n\t\t}\r\n\r\n\t\tif (Select2Type === '2') {\r\n\t\t\t//Select2 with CheckBox\r\n\r\n\t\t\tvar isAllSelected = false;\r\n\t\t\tif ($WidgetIdentifier[0].options.length === $WidgetIdentifier[0].selectedOptions.length) {\r\n\t\t\t\tisAllSelected = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (WidgetId != '') {\r\n\t\t\t\toption = new Option('Select All', 'All', true, isAllSelected);\r\n\t\t\t\t$WidgetIdentifier.prepend(option);\r\n\t\t\t\t$WidgetIdentifier.find('option:first-child').addClass('SelectedAll');\r\n\t\t\t}\r\n\t\t\tSelect2Options.multiple = true;\r\n\t\t\tSelect2Options.closeOnSelect = false;\r\n\t\t\tSelect2Options.allowHtml = false;\r\n\t\t\tSelect2Options.tags = false;\r\n\r\n\t\t\tif (HasSearch === 'True') {\r\n\t\t\t\tSelect2Options.dropdownAdapter = $.fn.select2.amd.require('SearchLikeSingle');\r\n\t\t\t} else {\r\n\t\t\t\tSelect2Options.minimumResultsForSearch = -1;\r\n\t\t\t}\r\n\r\n\t\t\tSelect2Options.containerCssClass = 'MultipleSelect';\r\n\t\t\tSelect2Options.dropdownCssClass = 'MultipleSelect';\r\n\t\t\tSelect2Options.templateSelection = formatResult;\r\n\t\t}\r\n\r\n\t\tif (Select2Type === '6') {\r\n\t\t\t// Select2 HtmlOptions\r\n\t\t\tSelect2Options = {};\r\n\t\t\tif (config.locale === 'AR' || config.locale === 'FA') {\r\n\t\t\t\tSelect2Options.dir = 'rtl';\r\n\t\t\t}\r\n\r\n\t\t\tvar dataHtmlOption = [];\r\n\t\t\t$WidgetIdentifier.find('option').each(function(key, value) {\r\n\t\t\t\tvar optionObject = {\r\n\t\t\t\t\tid: $(this).val(),\r\n\t\t\t\t\ttext: $(this).text(),\r\n\t\t\t\t\thtml: $(this).text(),\r\n\t\t\t\t};\r\n\t\t\t\tdataHtmlOption.push(optionObject);\r\n\t\t\t});\r\n\r\n\t\t\tSelect2Options.containerCssClass = 'customSelect';\r\n\t\t\tSelect2Options.dropdownCssClass = 'dropdownCustom';\r\n\t\t\tSelect2Options.data = dataHtmlOption;\r\n\t\t\tSelect2Options.escapeMarkup = function(markup) {\r\n\t\t\t\treturn markup;\r\n\t\t\t};\r\n\r\n\t\t\tif (SelectedValue != '') {\r\n\t\t\t\t$WidgetIdentifier.val(SelectedValue).trigger('change');\r\n\t\t\t} else {\r\n\t\t\t\t$WidgetIdentifier.val('').trigger('change');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (Select2Type === '1') {\r\n\t\t\t// Select2 TagCustom\r\n\t\t\tSelect2Options.tags = true;\r\n\t\t\tSelect2Options.containerCssClass = 'tagCustom';\r\n\t\t\tSelect2Options.dropdownCssClass = 'tagCustom';\r\n\t\t\tSelect2Options.TokenSeparatos = [',', ' '];\r\n\t\t\tSelect2Options.createSearchChoice = function(term, data) {\r\n\t\t\t\tif (\r\n\t\t\t\t\t$(data).filter(function() {\r\n\t\t\t\t\t\treturn this.text.localeCompare(term) === 0;\r\n\t\t\t\t\t}).length === 0\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: term,\r\n\t\t\t\t\t\ttext: term,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (Select2Type === '5') {\r\n\t\t\t// Select2 TagMultiple\r\n\t\t\tSelect2Options.tags = true;\r\n\t\t\tSelect2Options.containerCssClass = 'tagSystem';\r\n\t\t\tSelect2Options.dropdownCssClass = 'tagSystem';\r\n\t\t\tSelect2Options.createTag = function(params) {\r\n\t\t\t\tvar term = $.trim(params.term);\r\n\t\t\t\tif (term === '') {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: '#' + term,\r\n\t\t\t\t\ttext: term,\r\n\t\t\t\t\tnewTag: true, // add additional parameters\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (HasSearch === 'False') {\r\n\t\t\tSelect2Options.minimumResultsForSearch = -1;\r\n\t\t}\r\n\r\n\t\tif (OnUnSelectingJS != '' || OnSelectingJS != '') {\r\n\t\t\t$WidgetIdentifier\r\n\t\t\t\t.select2(Select2Options)\r\n\t\t\t\t.on('select2:unselecting', function(e) {\r\n\t\t\t\t\t$(this).data('unselecting', true);\r\n\t\t\t\t\tOnUnSelectingJS;\r\n\t\t\t\t})\r\n\t\t\t\t.on('select:selecting', function(e) {\r\n\t\t\t\t\tOnSelectingJS;\r\n\t\t\t\t})\r\n\t\t\t\t.on('select:opening', function(e) {\r\n\t\t\t\t\tif ($(this).data('unselecting')) {\r\n\t\t\t\t\t\t$(this).removeData('unselecting');\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on('select:open', function(evt) {\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t})\r\n\t\t\t\t.on('select2:close', function(evt) {\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (Select2Type === '2') {\r\n\t\t\t\t$WidgetIdentifier.select2(Select2Options);\r\n\t\t\t\tvar idwidget = '#' + WidgetId;\r\n\r\n\t\t\t\t$WidgetIdentifier.on('select2:select', function(e) {\r\n\t\t\t\t\tUnselectedId = e.params.data.id;\r\n\t\t\t\t\tif (UnselectedId === 'All') {\r\n\t\t\t\t\t\tvar selectedItems = [];\r\n\t\t\t\t\t\tvar allOptions = $(idwidget + ' option');\r\n\t\t\t\t\t\tallOptions.each(function() {\r\n\t\t\t\t\t\t\tselectedItems.push($(this).val());\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t$WidgetIdentifier.select2('destroy');\r\n\t\t\t\t\t\t$WidgetIdentifier.val(selectedItems).trigger('change');\r\n\t\t\t\t\t\t$WidgetIdentifier.select2(Select2Options);\r\n\t\t\t\t\t\t$WidgetIdentifier.select2('open');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar selectedOptions = $WidgetIdentifier.find('option:selected').length;\r\n\t\t\t\t\t\tvar totalOptions = $WidgetIdentifier.find('option').length;\r\n\t\t\t\t\t\tif (selectedOptions === totalOptions - 1 && $(idwidget + ' >  option:selected:first-child').length === 0) {\r\n\t\t\t\t\t\t\tvar selectedItems = [];\r\n\t\t\t\t\t\t\tvar allOptions = $(idwidget + ' option');\r\n\t\t\t\t\t\t\tallOptions.each(function() {\r\n\t\t\t\t\t\t\t\tselectedItems.push($(this).val());\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t$WidgetIdentifier.select2('destroy');\r\n\t\t\t\t\t\t\t$WidgetIdentifier.val(selectedItems).trigger('change');\r\n\t\t\t\t\t\t\t$WidgetIdentifier.select2(Select2Options);\r\n\t\t\t\t\t\t\t$WidgetIdentifier.select2('open');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$WidgetIdentifier.on('select2:unselect', function(e) {\r\n\t\t\t\t\tUnselectedId = e.params.data.id;\r\n\t\t\t\t\tif (UnselectedId === 'All') {\r\n\t\t\t\t\t\t$(idwidget + ' > option').removeAttr('selected');\r\n\t\t\t\t\t\t$WidgetIdentifier.select2('destroy');\r\n\t\t\t\t\t\t$WidgetIdentifier.select2(Select2Options);\r\n\t\t\t\t\t\t$WidgetIdentifier.select2('open');\r\n\t\t\t\t\t\t$(idwidget)\r\n\t\t\t\t\t\t\t.val('')\r\n\t\t\t\t\t\t\t.trigger('change');\r\n\t\t\t\t\t\t//$(idwidget +' > option').attr('selected', \"selected\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$(idwidget + ' > option:first-child').removeAttr('selected');\r\n\t\t\t\t\t\t$WidgetIdentifier.select2(Select2Options);\r\n\t\t\t\t\t\t$WidgetIdentifier.select2('open');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t$WidgetIdentifier.select2(Select2Options);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n\n//# sourceURL=webpack:///./src/components/05-components/v3-pat/select-system/scripts.js?");

/***/ })

/******/ });