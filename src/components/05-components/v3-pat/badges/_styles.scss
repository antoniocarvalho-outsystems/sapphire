@mixin badges($bgColor: $sapphire-white, $textColor: $regular-blue, $notInverted: true, $borderRadius: 2px) {
	@if ($notInverted) {
		border: 1px solid $bgColor;
	} @else {
		border: 1px solid $textColor;
	}

	background-color: $bgColor;
	border-radius: $borderRadius;
	color: $textColor;
}

@mixin prescriptionBadges($color: transparent) {
	background-color: transparent;
	border-color: $color;
	border-radius: $prescriptionRadius;

	&.IsSelected {
		@include badges($color, $sapphire-white, $borderRadius: $prescriptionRadius);
	}
}

$prescriptionRadius: 18px;

// Badges & Tags
//
// Badges and Tags .
//
//Style guide: Components.Badges

// Badges
//
// Badges Regular.
//
// .StatusBadges - Regular
// .StatusBadges.BadgeYellow - BadgeYellow
// .StatusBadges.BadgeRed - BadgeRed
// .StatusBadges.BadgeGreen - BadgeGreen
// .StatusBadges.BadgeGrey - BadgeGrey
// .StatusBadges.BadgeBlue - BadgeBlue
// .StatusBadges.BadgeWhite - BadgeWhite
// .StatusBadges.InvertBackground.BadgeYellow - Invert BadgeYellow
// .StatusBadges.InvertBackground.BadgeRed - Invert BadgeRed
// .StatusBadges.InvertBackground.BadgeGreen - Invert BadgeGreen
// .StatusBadges.InvertBackground.BadgeGrey - Invert BadgeGrey
// .StatusBadges.InvertBackground.BadgeBlue - Invert BadgeBlue
// .StatusBadges.InvertBackground.BadgeWhite - Invert BadgeWhite
//
// Markup: _badges.hbs
//
// Style guide: Components.Badges.Regular

// Badges Extended
//
// Badges Extended.
//
// .BadgesExtendedWrapper.PrescriptionBadges - Regular
// .BadgesExtendedWrapper.PrescriptionBadges.Green.IsSelected  - Green
//
// Markup: _badges.hbs
//
// Style guide: Components.Badges.Extended

// Prescription Badges
//
// Prescription Badges.
//
// .PrescriptionBadges - Regular
// .PrescriptionBadges.DarkRed  - DarkRed
// .PrescriptionBadges.Red  - Red
// .PrescriptionBadges.Orange  - Orange
// .PrescriptionBadges.Yellow  - Yellow
// .PrescriptionBadges.Blue  - Blue
// .PrescriptionBadges.DarkGrey  - DarkGrey
// .PrescriptionBadges.LightGrey  - LightGrey
// .PrescriptionBadges.Green  - Green
//
// Markup: _badges.hbs
//
// Style guide: Components.Badges.PrescriptionBadges

.LayoutBlank,
.LayoutBase,
.LayouPopup {
	.StatusBadges {
		@include badges;
		font-family: $font-family-bold;
		font-size: 0.857rem;
		line-height: 12px;
		max-height: 20px;
		padding: 3px 10px;
		vertical-align: middle;

		&.BadgeYellow {
			@include badges($regular-beige, $dark-beige);
		}

		&.BadgeRed {
			@include badges($light-red, $regular-red);
		}

		&.BadgeGreen {
			@include badges($light-green, $regular-green);
		}

		&.BadgeGrey {
			@include badges($light-grey, $regular-grey);
		}

		&.BadgeBlue {
			@include badges($dark-blue, $sapphire-white);
		}

		&.BadgeWhite {
			@include badges($sapphire-white, $light-green);
		}

		&.IconTextRed {
			color: $regular-red;
		}

		&.IconTextBlack {
			color: $dark-grey;
		}

		&.InvertBackground {
			&.BadgeRed {
				@include badges($textColor: $regular-red, $notInverted: false);
			}

			&.BadgeGreen {
				@include badges($textColor: $regular-green, $notInverted: false);
			}

			&.BadgeYellow {
				@include badges($textColor: $regular-yellow, $notInverted: false);
			}

			&.BadgeGrey {
				@include badges($textColor: $light-grey, $notInverted: false);
			}

			&.BadgeBlue {
				@include badges($textColor: $dark-blue, $notInverted: false);
			}

			&.BadgeSapphireBlue2 {
				@include badges($textColor: $regular-blue, $notInverted: false);
			}

			&.IconTextRed {
				color: $regular-red;
			}

			&.IconTextBlack {
				color: $dark-grey;
			}
		}

		.tablet .StatusBadges .Badges_Icon + div {
			white-space: nowrap;
		}
	}

	.BadgesExtendedWrapper {
		.PrescriptionBadges {
			border-radius: 0;
			font-family: $font-family-bold;
			font-size: $font-size-small;
			//height: 15px;
			line-height: 15px;
			max-height: 20px;
			padding: 0 10px;

			&.Green.IsSelected {
				@include badges($regular-green, $sapphire-white);
			}

			&.Red.IsSelected {
				@include badges($regular-red, $sapphire-white);
			}

			&.Yellow.IsSelected {
				@include badges($regular-yellow, $sapphire-white);
			}

			&.LightGrey.IsSelected {
				@include badges($light-grey, $sapphire-white);
			}
		}
	}

	.BadgeClassification {
		border-radius: 2px;
		color: $sapphire-white;
		display: inline-block;
		font-family: $font-family-bold;
		font-size: $font-size-small;
		padding: 1px 4px;
		white-space: nowrap;
	}

	.IconBadgeClassification {
		margin-right: 5px;
	}

	.NumberCircle {
		align-items: center;
		border: 1px solid $mid-dark-grey;
		border-radius: 50%;
		color: $mid-dark-grey;
		display: flex;
		font-size: $font-size-heading3;
		height: 25px;
		justify-content: center;
		width: 25px;
	}

	.StatusTag {
		border-radius: 2px 0 2px 2px;
		color: $sapphire-white;
		font-family: $font-family-bold;
		font-size: $font-size-small;
		line-height: 15px;
		padding: 2px 8px;
		text-align: center;
		text-transform: uppercase;
	}

	.PrescriptionBadges {
		background-color: transparent;
		border: 2px solid transparent;
		color: $mid-dark-grey;
		font-family: $font-family-bold;
		font-size: $font-size-normal;
		height: 34px;
		line-height: 30px;
		min-width: 157px;
		padding: 0 14px;
		position: relative;
		vertical-align: middle;

		> div:nth-child(1) {
			width: auto;
		}

		.QuantityLabel {
			margin-left: 6px;
		}

		.BadgeArrow {
			font-size: $font-size-small;
			line-height: 34px;
			position: absolute;
			right: 14px;
		}

		&.DarkRed {
			@include prescriptionBadges($dark-red);
		}

		&.Red {
			@include prescriptionBadges($regular-red);
		}

		&.Orange {
			@include prescriptionBadges($regular-orange);
		}

		&.Yellow {
			@include prescriptionBadges($regular-yellow);
		}

		&.Blue {
			@include prescriptionBadges($dark-blue);
		}

		&.DarkGrey {
			@include prescriptionBadges($dark-grey);
		}

		&.LightGrey {
			@include prescriptionBadges($light-grey);
		}

		&.Green {
			@include prescriptionBadges($regular-green);
		}
	}

	.BadgeArrow.IsSelected {
		color: $sapphire-white;
	}

	.BadgeArrow.IsSmallBadge.IsSelected {
		display: none;
	}

	/* SmallBadge */

	.IsSmallBadge {
		min-width: auto;
	}

	.IsSmallBadgeArrow {
		display: none;
	}

	.FA,
	.AR {
		.IconBadgeClassification {
			margin-left: 5px;
			margin-right: auto;
		}

		.PrescriptionBadges {
			padding-left: 0;
			padding-right: 22px;

			&.IsSmallBadge > div {
				width: auto;
			}

			.BadgeArrow {
				left: 14px;
			}

			.QuantityLabel {
				margin-left: 0;
				margin-right: 6px;
			}
		}

		.IsSmallBadge {
			padding: 0 12px;
		}
	}
}
