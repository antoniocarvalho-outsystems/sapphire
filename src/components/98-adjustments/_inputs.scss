.phone,
.tablet {
	input[type='number'],
	input[type='text'] {
		height: 36px;
	}

	select {
		line-height: 18px;
	}
}

.isTouch {
	& select,
	& input[type='text'] {
		font-size: 1em;
		height: 50px;
	}
}

.ie {
	input[type='radio'],
	input[type='checkbox'],
	.Form input[type='radio'],
	.Form input[type='checkbox'] {
		border-radius: 0;
	}
}

.ie8 {
	select {
		padding: 6px;
	}
}

.CheckMandatory {
	input[type='checkbox'] {
		&:not(:checked):before {
			border: 1px solid red;
			box-shadow: none;
		}
	}
}

.Form {
	&:not(.ReadOnly) {
		cursor: text;
	}

	[disabled='disabled'].ReadOnly,
	[disabled='disabled'].ReadOnly,
	[disabled='disabled'].ReadOnly:not(.Not_Valid),
	[readonly='readonly'].ReadOnly:not(.Not_Valid) {
		background-color: #f5f5f5;
		background-position: right 14px center;
		background-repeat: no-repeat;
		border-radius: 2px;
		color: #0b374a;
		cursor: not-allowed;
		font-size: 14px;
	}

	input,
	textarea {
		&.ReadOnly {
			background: #fff;
		}
	}

	input,
	select,
	textarea {
		&.ReadOnly {
			font-size: 12px;
		}

		&.Not_Valid {
			border-radius: 4px;
		}
	}

	input.ReadOnly:not(.Not_Valid),
	select.ReadOnly:not(.Not_Valid),
	textarea.ReadOnly:not(.Not_Valid) {
		background-color: #fff;
		border: 1px solid #ccc;
		border-radius: 2px;
		box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
		cursor: pointer;
		font-size: 12px;

		&:focus {
			background-color: #fff;
			border: 1px solid #aaa;
			border-radius: 2px;
			box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
			font-size: 12px;
		}
	}

	input[readonly='readonly'].ReadOnly:not(.Not_Valid),
	input[disabled='disabled'].ReadOnly:not(.Not_Valid),
	textarea[readonly='readonly'].ReadOnly:not(.Not_Valid),
	textarea[disabled='disabled'].ReadOnly:not(.Not_Valid),
	select[readonly='readonly'].ReadOnly:not(.Not_Valid),
	select[disabled='disabled'].ReadOnly:not(.Not_Valid) {
		&:focus {
			background-color: #f5f5f5;
			border: 1px solid #ccc;
			box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
		}
	}

	/*input.ReadOnly[disabled="disabled"][type="radio"],
  input.ReadOnly[readonly="readonly"][type="radio"],
  input.ReadOnly[disabled="disabled"][type="checkbox"],
  input.ReadOnly[readonly="readonly"][type="checkbox"],*/
	input[type='radio'],
	input[type='checkbox'] {
		&.ReadOnly {
			background-color: transparent;
			border-width: 0;
		}

		&.Not_Valid {
			border: transparent;
			padding: 0;
		}
	}

	textarea {
		&.Not_Valid,
		&.Not_Valid:focus {
			font-size: 14px;
			padding: 10px;
		}
	}
}

.SegmentedControl {
	input {
		left: -20px;
		margin: 0 5px 0 0;
		opacity: 0;
		padding: 0;
		position: absolute;
	}
}

.Dropdown {
	&.Mandatory.Not_Valid {
		border: solid 1px #a55555;
		border-bottom-right-radius: 0;
		border-left: 3px solid #a55555 !important;
		border-top-right-radius: 0;
	}
}

/*  RTL Adjustments */
.AR,
.FA {
	.SegmentedControl {
		input {
			left: auto;
			right: -20px;
		}
	}
}
